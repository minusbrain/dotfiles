#!/bin/bash
BRANCH_FILTER=$1
MAIN_BRANCH=$2

SCRIPT_DIR=$(dirname "$(realpath $0)")

source ${SCRIPT_DIR}/utils.sh

if [ -z "${BRANCH_FILTER}" ]; then
    BRANCH_FILTER="usr/${USER}"
fi

if [ -z "${MAIN_BRANCH}" ]; then
    MAIN_BRANCH=$(git branch --show-current)
fi

if [ -z "${MAIN_BRANCH}" ]; then
    GIT_REVIEW_FILE=$(find_upwards . .gitreview)
    if [ ! -z "${GIT_REVIEW_FILE}" ]; then
        MAIN_BRANCH=$(cat ${GIT_REVIEW_FILE} | grep "defaultbranch" | sed -E 's/defaultbranch=//')
    fi
fi

if [ -z "${MAIN_BRANCH}" ]; then
    echo "No Main Branch provided, not on a branch currently and not defaultbranch in .gitreview"
    exit 1
fi


if [ ! -z "$(git status --porcelain)" ]; then
    echo "Repository isn't clean. Clean up first"
    exit 1
fi

git checkout ${MAIN_BRANCH} >/dev/null 2>&1 || exit 1

branches_to_check="$(git branch | grep ${BRANCH_FILTER})"
while IFS= read -r line; do
    if [ -z "${line}" ]; then
        continue
    fi
    line=$(echo $line | xargs)
    change_id=$(git log -1 ${line} | grep "Change-Id:" | xargs)
    main_branch_log=$(git log --grep="${change_id}")
    if [ -z "${main_branch_log}" ]; then
        echo "${line}"
    fi
done <<< "${branches_to_check}"

git checkout @{-1} >/dev/null 2>&1 || exit 1

exit 0
