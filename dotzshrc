# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="jonathan"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

FZF_VERSION=$(fzf --version)
if [[ ! -z $FZF_VERSION ]]; then
    source <(fzf --zsh)
fi
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
unalias rd

alias poff='sudo systemctl poweroff'
alias reboot='sudo systemctl reboot'

alias ll='ls -ls'
alias la='ls -lsa'
alias ld='du -h -d 1 | sort -hr'
alias ls='ls --color=auto'

command -v pacman >/dev/null
if [ $? -eq 0 ]; then
    alias agu='sudo pacman -Suy'
    alias agi='sudo pacman -S'
    alias agr='sudo pacman -R'
fi

command -v apt >/dev/null
if [ $? -eq 0 ]; then
    alias agu='sudo apt-get update && sudo apt-get upgrade'
    alias agi='sudo apt-get install'
    alias agr='sudo apt-get remove'
fi

alias zp='tar -zcvf'
alias uzp='tar -zxvf'

alias pdf='zathura'
alias vim='nvim'

alias gap='git add . --patch'
alias gc='git commit'
alias gco='git checkout'
alias gd='git diff'
alias gf='git fetch --all -p'
alias gl='git log'
alias gm='git merge'
alias gpl='git pull'
alias gpu='git push'
alias grb='git rebase'
alias grs='git reset'
alias gs='git status'
alias gr='git remote -v'
alias gsui='git submodule update --init'
alias gico='git-interactive-checkout'
alias gid='git-select-revision git diff'
alias gidl='git-dl-review'
alias gim='git-select-revision git merge'
alias girb='git-select-revision git rebase'
alias gis='git-select-revision echo'
alias gfm='git-find-merged'
alias gfdm='git-find-merged usr/${USER} | xargs -L1 git branch -D'
alias gfu='git-find-unmerged'

function gnf {
    git checkout -b usr/${USER}/$1
}

alias grep='grep --color=auto'
alias egrep='egrep --color=auto'

alias grp='groups | sed -e "s/ /\n/g" | fzf --height 20'

alias rg="rg --hidden --glob '!.git'"

alias rlc='repo forall -p -c git show -s --format="%H - %cI - %cn: %s"'
alias rsd='repo sync -d -j8'
alias rst='repo status'
alias rfm='repo forall -p -c "git find-merged"'
alias rfdm='repo forall -p -c "git find-merged usr/${USER} | xargs -L1 git branch -D"'
alias rfu='repo forall -p -c "git find-unmerged"'
alias rsy='repo sync -j8'

alias sclrst='sudo systemctl restart'
alias sclstart='sudo systemctl start'
alias sclstatus='sudo systemctl status'
alias sclstop='sudo systemctl stop'

alias bh='bin_helper'

alias ss='gnome-screenshot -i'
alias yaml2js='python -c '\''import sys, yaml, json; json.dump(yaml.load(sys.stdin, Loader=yaml.SafeLoader), sys.stdout, indent=4)'\'''

eval "$(zoxide init zsh)"

alias cd='z'
alias cdi='zi'


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
